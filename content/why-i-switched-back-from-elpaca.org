#+TITLE: Why I decided to switch back from elpaca
#+AUTHOR: lalo
#+DATE: 2023-05-28
#+TAGS: emacs

Builtin package manager =package.el= doesn't feel very comfortable.  In fact there are many other package managers for our beloved GNU Emacs, that try to succeed over =package.el=.  One of the newest ones is [[https://github.com/progfolio/elpaca][elpaca]].  In this blog post I will compare =elpaca= and =package.el= and show why I chose the last one.

* elpaca is cool

=elpaca= is obviously a *great* effort.  It offers some awesome features usually not found in other package managers for Emacs.  Some of them are async package installation, builtin UI for browsing/searching packages etc.

I loved the asynchronous package installation feature.  It's such a simple thing that we all needed.  For decades every Emacs user waits at least 10 seconds(usually much more) to install some packages.  =elpaca= makes package installation seamless.  I would even call it ~magical~.

So why would I use anything else?  The package manager that we talked about looks like a charm.  Well...

* What's wrong with package.el

Usually people say following things about =package.el=:
 * can't install/pin a specific version of a package;
 * startup time is slow;
 * can't install a package hosted on some repo;
 * package installation is slow and blocks the main thread.

In my opinion, =package.el= is not bad at all.  But before I say good things about builtin package manager let me describe my usual workflow.

I launch Emacs once in two weeks or so; *startup time* doesn't matter for me.  I don't *update packages* frequently, in fact I do it once in 3 months or so.  I don't use many packages, I try to minimize amount of installed packages.  Considering those things you can tell that I'm pretty happy with =package.el=.

I would like to point good things that other package managers for Emacs may lack:
 * nice and consistent UI for browsing/listing packages.  =elpaca= has one; it even provides some advanced search capabilities.  I found them awesome but didn't see any improvement in my daily Emacs usage;
 * ~popularity~.  Most of the people use =package.el=; it's easier to fight with problems;
 * all installed packages are loaded at startup.  This is the thing that I missed with =elpaca=.  Consider this case: you installed some package 6 months ago, let it be [[https://github.com/calancha/Minesweeper][mines.el]]; you want to use that package *now*.  =elpaca= won't let you do it because package are only loaded if you specify them in your init.  You have to run
   #+begin_src emacs-lisp
     (use-package mines :elpaca t)
   #+end_src
   so Emacs loads the package and then you can play the game of minesweeper.  Someone would say that I'm wrong and approach with =elpaca= gives you ~reproducible~ configs.  Ok, but I use only 1 computer.  I don't care about reproducibility; I care for my power user experience.

* Conclusion

=package.el= felt like a return to home after some long months.  Eventhough it's slow and not as flashy as other package managers the builtin package manager feels natural.

* Extra

Recently I discovered that you can improve package installation time with the package called [[https://github.com/jwiegley/emacs-async][async]].  Bytecompilation of packages can be done asynchronously using a simple snippet of code:
#+begin_src emacs-lisp
  (async-bytecomp-package-mode 1)
#+end_src
Installation of big packages like =exwm=, =telega= or =magit= happens in ~seconds~.

However it confuses me that only bytecomp happens asynchronously.  Why the process of downloading blocks my Emacs?  It doesn't affect Lisp machine, right?  I guess I want to much.

[[./index.org][Home page]]
